node n1 {
    type router
    model host
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 10.0.0.10/24
	 ipv6 address 2001:0::10/64
	!
	interface eth2
	 ip address 10.0.3.10/24
	 ipv6 address 2001:3::10/64
	!
	interface eth1
	 ip address 10.0.2.11/24
	 ipv6 address 2001:2::11/64
	!
    }
    canvas c1
    iconcoords {380.0 301.0}
    labelcoords {380.0 333.0}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('synchronous-server.py', 'server.c', 'mtu-server.c', 'mtu-client.py', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:mtu-client.py
	custom-command mtu-client.py
	config {
	file:///home/arunothia/Documents/IITK/Sem 7/CS425-Networks/Projects/Extra-project/mtu_client.py
	}
    }
    custom-config {
	custom-config-id service:UserDefined:mtu-server.c
	custom-command mtu-server.c
	config {
	file:///home/arunothia/Documents/IITK/Sem 7/CS425-Networks/Projects/Extra-project/server.c
	}
    }
    custom-config {
	custom-config-id service:UserDefined:server.c
	custom-command server.c
	config {
	file:///home/arunothia/Documents/IITK/Sem 7/CS425-Networks/Projects/Extra-project/server.c
	}
    }
    custom-config {
	custom-config-id service:UserDefined:synchronous-server.py
	custom-command synchronous-server.py
	config {
	file:///home/arunothia/Documents/IITK/Sem 7/CS425-Networks/Projects/Extra-project/mtu_client.py
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.1
	ip route add default via 2001:0::1
	ip route add default via 10.0.2.1
	ip route add default via 2001:2::1
	ip route add default via 10.0.3.20
	ip route add default via 2001:3::20
	
	}
    }
    services {DefaultRoute SSH UserDefined}
    interface-peer {eth1 n4}
    interface-peer {eth2 n5}
    interface-peer {eth0 n2}
}

node n2 {
    type router
    model host
    network-config {
	hostname n4
	!
	interface eth0
	 ip address 10.0.0.11/24
	 ipv6 address 2001:0::11/64
	!
    }
    canvas c1
    iconcoords {643.0 300.0}
    labelcoords {643.0 332.0}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('rtu-client.py', 'rtu-server.py', 'rtu_client.py', 'rtu_server.py', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:rtu_server.py
	custom-command rtu_server.py
	config {
	file:///home/arunothia/Documents/IITK/Sem 7/CS425-Networks/Projects/Extra-project/rtu_server.py
	}
    }
    custom-config {
	custom-config-id service:UserDefined:rtu_client.py
	custom-command rtu_client.py
	config {
	file:///home/arunothia/Documents/IITK/Sem 7/CS425-Networks/Projects/Extra-project/rtu_client.py
	}
    }
    custom-config {
	custom-config-id service:UserDefined:rtu-server.py
	custom-command rtu-server.py
	config {
	file:///home/arunothia/Documents/IITK/Sem 7/CS425-Networks/Projects/Extra-project/rtu_server.py
	}
    }
    custom-config {
	custom-config-id service:UserDefined:rtu-client.py
	custom-command rtu-client.py
	config {
	file:///home/arunothia/Documents/IITK/Sem 7/CS425-Networks/Projects/Extra-project/rtu_server.py
	}
    }
    services {DefaultRoute SSH UserDefined}
    interface-peer {eth0 n1}
}

node n4 {
    type router
    model host
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 10.0.2.10/24
	 ipv6 address 2001:2::10/64
	!
    }
    canvas c1
    iconcoords {65.0 302.0}
    labelcoords {64.0 334.0}
    interface-peer {eth0 n1}
}

node n5 {
    type router
    model PC
    network-config {
	hostname n1
	!
	interface eth0
	 ip address 10.0.3.20/24
	 ipv6 address 2001:3::20/64
	!
    }
    canvas c1
    iconcoords {381.0 78.0}
    labelcoords {381.0 111.0}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('client.c', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:client.c
	custom-command client.c
	config {
	file:///home/arunothia/Documents/IITK/Sem 7/CS425-Networks/Projects/Extra-project/client.c
	}
    }
    services {DefaultRoute UserDefined}
}

link l3 {
    nodes {n4 n1}
    bandwidth 0
}

link l4 {
    nodes {n5 n1}
    bandwidth 0
}

link l1 {
    nodes {n1 n2}
    bandwidth 0
}

annotation a1 {
    iconcoords {188.0 399.0}
    type text
    label {SCADA testbed architecture for a simple water tank system}
    labelcolor #00cc00
    fontfamily {Arial}
    fontsize {18}
    canvas c1
}

annotation a2 {
    iconcoords {342.0 44.0}
    type text
    label {HMI-Client}
    labelcolor #0000e8
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a3 {
    type text
    iconcoords {403.0 41.0}
    label {}
    canvas c1
}

annotation a4 {
    iconcoords {31.0 345.0}
    type text
    label {HMI-Server}
    labelcolor #0000d3
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a5 {
    type text
    iconcoords {89.0 265.0}
    label {}
    canvas c1
}

annotation a6 {
    iconcoords {361.0 344.0}
    type text
    label {MTU}
    labelcolor #0000bc
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a7 {
    iconcoords {634.0 341.0}
    type text
    label {RTU}
    labelcolor #0000c9
    fontfamily {Arial}
    fontsize 12
    canvas c1
}

annotation a9 {
    type text
    iconcoords {963.0 282.0}
    label {}
    canvas c1
}

annotation a10 {
    type text
    iconcoords {957.0 272.0}
    label {}
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

